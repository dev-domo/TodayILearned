# 2024.12.22 TIL

## 컴퓨터의 기본 동작
-[X] 하드디스크에서 램으로 프로그램이 복사된다.
-[X] 램에서 실행 중인 프로그램을 프로세스라고 한다.
-[X] 램에 프로그램이 복사될 때 CPU가 읽을 수 있는 기계어로 컴파일된다.
-[X] CPU가 프로그램을 한 동작씩 수행하면서 램의 코드, 힙, 스택 영역에 수행 결과가 저장된다. 이때 프로그래머가 작성한 코드는 한 동작씩 코드 영역에 저장된다.

## CPU와 메모리의 동작, 프로그래밍 언어
-[X] CPU의 구성 요소
	- 제어장치 : 명령어를 한줄한줄 실행하도록 모든 것을 통제
	  + 프로그램 카운터
	  + 메모리 주소 레지스터(=저장 장치) (램 메모리 주소 기억) : 명령어 패치
          + 메모리 버퍼 레지스터
          + 명령 레지스터
          + 명령어 해독기

  - 연산장치(ALU)
	- 캐시 : 램의 메모리 주소를 저장

램의 구성요소
	# 운영체제 : 키보드, 마우스, CPU, 메모리 등 총괄 / 미리 올라와있음 / 앱의 제어권 관리
	# 앱 : 앱 하나마다 코드, 데이터, 힙, 스택이 존재
        # ROM : 비휘발성(read only), 자기 자신 점검, 기본 입출력 활성화(BIOS), 부팅(OS를 메모리에 올림)

프로그래밍 언어의 발전
	# 기계어 -> 어셈블리어 -> C언어(컴파일을 통해 기계어 변환)

기초 문법
=는 오른쪽에 있는 것을 왼쪽에 할당한다는 뜻이다
대문자와 소문자를 엄격하게 구분한다 (Swift에서는 camel case를 사용한다)
키워드(예약어)는 임의로 사용할 수 없다
주석
Swift는 세미콜론이 선택사항이다. 하지만 주로 사용하지 않는다.
줄 맞추기 : 코드 가독성

변수와 상수
변수 키워드 : var
상수 키워드 : let
문자열 중간에 변수를 삽입할 때 백슬래시(\)뒤에 변수를 붙일 수 있다
자료형을 먼저 선언하고 이후 값을 선언할 수 있다

 


